openapi: 3.0.3
info:
  title: Example API
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/api

paths:
  /buildings:
    get:
      tags: [ Buildings ]
      operationId: listBuildings
      summary: Получить список зданий
      description: Возвращает список доступных зданий с координатами.
      responses:
        '200':
          description: OK — список зданий получен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBuildingsResponse'
        '400':
          description: Validation Error — входные данные не прошли валидацию.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /buildings/{id}:
    get:
      tags: [ Buildings ]
      operationId: getBuilding
      summary: Получить информацию о здании
      description: Возвращает данные здания по идентификатору.
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор здания.
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: OK — здание найдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBuildingResponse'
        '404':
          description: Not Found — здание не найдено.
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /buildings/search/circle:
    get:
      tags: [ Buildings ]
      operationId: searchBuildingsInRadius
      summary: Геопоиск зданий по радиусу
      description: Находит здания в пределах заданного радиуса от точки.
      parameters:
        - name: latitude
          in: query
          required: true
          description: Центральная широта.
          schema:
            type: number
            format: double
            minimum: -90
            maximum: 90
        - name: longitude
          in: query
          required: true
          description: Центральная долгота.
          schema:
            type: number
            format: double
            minimum: -180
            maximum: 180
        - name: radius
          in: query
          required: true
          description: Радиус поиска в метрах.
          schema:
            type: number
            format: double
            minimum: 1
          example: 500
      responses:
        '200':
          description: OK — найдены здания в радиусе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBuildingsResponse'
        '400':
          description: Validation Error — входные данные не прошли валидацию.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations:
    get:
      tags: [ Organizations ]
      operationId: listOrganizations
      summary: Получить список организаций
      description: >-
        Возвращает список организаций с фильтрами по зданию, деятельности, названию
        и географическому радиусу поиска. При передаче координат и радиуса организации
        сортируются по расстоянию от точки. Для доступа требуется действующий `X-API-Key`.
      parameters:
        - name: building_id
          in: query
          schema:
            type: integer
            minimum: 1
          description: Фильтр по ID здания, к которому привязана организация.
        - name: activity_id
          in: query
          schema:
            type: integer
            minimum: 1
          description: >-
            Фильтр по ID деятельности. Допускаются только виды деятельности уровня 1–3.
        - name: name
          in: query
          schema:
            type: string
            minLength: 1
            maxLength: 255
          description: Поиск по названию организации (поиск по подстроке, без учета регистра).
        - name: latitude
          in: query
          schema:
            type: number
            format: double
            minimum: -90
            maximum: 90
          description: Широта точки поиска. Используется вместе с `longitude`.
        - name: longitude
          in: query
          schema:
            type: number
            format: double
            minimum: -180
            maximum: 180
          description: Долгота точки поиска. Используется вместе с `latitude`.
        - name: radius_meters
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50000
          description: >-
            Радиус поиска в метрах. Требуется, если переданы координаты. Максимально допустимое значение — 50 000 метров.
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Ограничение количества записей в ответе.
      responses:
        '200':
          description: OK — найден список организаций.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationsResponse'
        '400':
          description: Validation Error — входные данные не прошли проверку.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '401':
          description: Unauthorized — отсутствует или некорректен заголовок `X-API-Key`.
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - apiKeyAuth: [ ]

  /organizations/{id}:
    get:
      tags: [ Organizations ]
      operationId: getOrganization
      summary: Получить организацию по ID
      description: >-
        Возвращает подробную информацию об организации, включая здание, телефоны и виды
        деятельности. Для доступа требуется действующий `X-API-Key`.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
          description: Идентификатор организации.
      responses:
        '200':
          description: OK — организация найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '401':
          description: Unauthorized — отсутствует или некорректен заголовок `X-API-Key`.
        '404':
          description: Not Found — организация не найдена.
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - apiKeyAuth: [ ]

components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: >
        Ключ доступа к API.

  schemas:
    ValidationError:
      type: object
      description: Стандартизированный формат ошибки.
      properties:
        message:
          type: string
          nullable: true
          description: Общее сообщение об ошибке. Обычно приходит или оно или errors.
        errors:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ValidationErrorItem'

    ValidationErrorItem:
      type: object
      required: [ message ]
      properties:
        message:
          type: string
          description: Человеческое описание проблемы.
          example: "Имя должно быть не короче 6 символов."
        field:
          type: string
          description: Имя поля, к которому относится ошибка.
          example: name

    Error:
      type: object
      required: [ message ]
      properties:
        message:
          type: string
          description: Человеческое описание проблемы.
          example: "Что то пошло не так."

    Building:
      type: object
      description: Информация о здании с координатами.
      required: [ id, address, latitude, longitude, created_at, updated_at ]
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор здания.
          example: 42
        address:
          type: string
          description: Почтовый адрес здания.
          example: "Москва, ул. Льва Толстого, 16"
        latitude:
          type: number
          format: double
          description: Географическая широта.
          example: 55.733969
        longitude:
          type: number
          format: double
          description: Географическая долгота.
          example: 37.588144
        created_at:
          type: string
          format: date-time
          description: Дата создания записи.
        updated_at:
          type: string
          format: date-time
          description: Дата обновления записи.

    GetBuildingResponse:
      type: object
      description: Ответ с данными одного здания.
      required: [ building ]
      properties:
        building:
          $ref: '#/components/schemas/Building'

    ListBuildingsResponse:
      type: object
      description: Ответ со списком зданий.
      required: [ buildings ]
      properties:
        buildings:
          type: array
          items:
            $ref: '#/components/schemas/Building'

    ListOrganizationsResponse:
      type: object
      description: Ответ со списком организаций, удовлетворяющих фильтрам.
      required: [ organizations ]
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationListItem'


    OrganizationListItem:
      type: object
      description: Запись в выдаче списка организаций.
      required: [ organization ]
      properties:
        organization:
          $ref: '#/components/schemas/Organization'
        distance_meters:
          type: number
          format: double
          nullable: true
          description: >-
            Расстояние до организации в метрах, если задан поиск по координатам.
          example: 420.5

    Organization:
      type: object
      description: Организация каталога с привязкой к зданию и видам деятельности.
      required:
        - id
        - name
        - address
        - location
        - building
        - activities
        - phones
      properties:
        id:
          type: integer
          description: Идентификатор организации.
          example: 501
        name:
          type: string
          description: Название организации.
          example: "ООО «Прогресс»"
        description:
          type: string
          nullable: true
          description: Краткое описание или специализация организации.
          example: "Разработка корпоративных информационных систем"
        address:
          type: string
          description: Почтовый адрес организации (уточнение относительно здания).
          example: "Этаж 3, офис 305"
        location:
          $ref: '#/components/schemas/GeoPoint'
        building:
          $ref: '#/components/schemas/Building'
        activities:
          type: array
          description: Список видов деятельности организации (глубина дерева до 3 уровней).
          items:
            $ref: '#/components/schemas/Activity'
        phones:
          type: array
          description: Контактные телефоны организации.
          items:
            $ref: '#/components/schemas/OrganizationPhone'

    OrganizationResponse:
      type: object
      description: Ответ с подробной информацией об организации.
      required: [ organization ]
      properties:
        organization:
          $ref: '#/components/schemas/Organization'

    OrganizationPhone:
      type: object
      description: Контактный телефон организации.
      required: [ id, number ]
      properties:
        id:
          type: integer
          description: Идентификатор записи телефона.
          example: 15
        number:
          type: string
          description: Телефонный номер в произвольном формате.
          example: "+7 (495) 123-45-67"
        description:
          type: string
          nullable: true
          description: Пояснение или тип телефона.
          example: "Отдел продаж"

    Activity:
      type: object
      description: Вид деятельности организации в каталоге.
      required: [ id, code, name, level ]
      properties:
        id:
          type: integer
          description: Идентификатор деятельности.
          example: 101
        code:
          type: string
          description: Уникальный символьный код деятельности.
          example: "it_services"
        name:
          type: string
          description: Название деятельности.
          example: "Информационные услуги"
        parent_id:
          type: integer
          nullable: true
          description: Идентификатор родительской деятельности.
          example: 100
        level:
          type: integer
          minimum: 1
          maximum: 3
          description: >-
            Уровень вложенности в дереве (1 — корень, 3 — максимальный допустимый уровень).
          example: 2

    GeoPoint:
      type: object
      description: Географическая точка с координатами в системе.
      required: [ latitude, longitude ]
      properties:
        latitude:
          type: number
          format: double
          minimum: -90
          maximum: 90
          description: Широта в градусах.
          example: 55.751244
        longitude:
          type: number
          format: double
          minimum: -180
          maximum: 180
          description: Долгота в градусах.
          example: 37.618423
