openapi: 3.0.3
info:
  title: Example API
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/api

paths:
  /buildings:
    get:
      tags: [ Buildings ]
      operationId: listBuildings
      summary: Получить список зданий
      description: Возвращает список доступных зданий с координатами.
      responses:
        '200':
          description: OK — список зданий получен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBuildingsResponse'
        '400':
          description: Validation Error — входные данные не прошли валидацию.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - apiKeyAuth: [ ]

  /buildings/{id}:
    get:
      tags: [ Buildings ]
      operationId: getBuilding
      summary: Получить информацию о здании
      description: Возвращает данные здания по идентификатору.
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор здания.
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: OK — здание найдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBuildingResponse'
        '404':
          description: Not Found — здание не найдено.
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - apiKeyAuth: [ ]
  /buildings/{id}/organizations:
    get:
      tags: [ Organizations ]
      operationId: listOrganizationsInBuilding
      summary: Получить список организаций в здании
      description: Возвращает список организаций, зарегистрированных в указанном здании.
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор здания.
          schema:
            type: integer
          example: 42
      responses:
        '200':
          description: OK — список организаций получен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrganizationsInBuildingResponse'
        '404':
          description: Not Found — здание не найдено.
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - apiKeyAuth: [ ]


components:
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: >
        Ключ доступа к API.

  schemas:
    ValidationError:
      type: object
      description: Стандартизированный формат ошибки.
      properties:
        message:
          type: string
          nullable: true
          description: Общее сообщение об ошибке. Обычно приходит или оно или errors.
        errors:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ValidationErrorItem'

    ValidationErrorItem:
      type: object
      required: [ message ]
      properties:
        message:
          type: string
          description: Человеческое описание проблемы.
          example: "Имя должно быть не короче 6 символов."
        field:
          type: string
          description: Имя поля, к которому относится ошибка.
          example: name

    Error:
      type: object
      required: [ message ]
      properties:
        message:
          type: string
          description: Человеческое описание проблемы.
          example: "Что то пошло не так."

    Building:
      type: object
      description: Информация о здании с координатами.
      required: [ id, address, latitude, longitude, created_at, updated_at ]
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор здания.
          example: 42
        address:
          type: string
          description: Почтовый адрес здания.
          example: "Москва, ул. Льва Толстого, 16"
        latitude:
          type: number
          format: double
          description: Географическая широта.
          example: 55.733969
        longitude:
          type: number
          format: double
          description: Географическая долгота.
          example: 37.588144
        created_at:
          type: string
          format: date-time
          description: Дата создания записи.
        updated_at:
          type: string
          format: date-time
          description: Дата обновления записи.

    GetBuildingResponse:
      type: object
      description: Ответ с данными одного здания.
      required: [ building ]
      properties:
        building:
          $ref: '#/components/schemas/Building'

    ListBuildingsResponse:
      type: object
      description: Ответ со списком зданий.
      required: [ buildings ]
      properties:
        buildings:
          type: array
          items:
            $ref: '#/components/schemas/Building'

    Organization:
      type: object
      description: Информация об организации, находящейся в здании.
      required: [ id, name, building_id ]
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор организации.
          example: 1001
        name:
          type: string
          description: Название организации.
          example: "ООО «Ромашка»"
        description:
          type: string
          nullable: true
          description: Описание организации.
          example: "Компания занимается разработкой программного обеспечения."
        email:
          type: string
          format: email
          nullable: true
          description: Контактный email организации.
          example: "info@romashka.ru"
        building_id:
          type: integer
          format: int64
          description: ID здания, в котором находится организация.
          example: 42
        created_at:
          type: string
          format: date-time
          nullable: true
          description: Дата создания записи.
          example: "2024-10-12T14:23:00Z"
        updated_at:
          type: string
          format: date-time
          nullable: true
          description: Дата обновления записи.
          example: "2024-12-01T09:10:00Z"

    ListOrganizationsInBuildingResponse:
      type: object
      description: Ответ со списком организаций, находящихся в указанном здании.
      required: [ organizations ]
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
