openapi: 3.0.3
info:
  title: Example API
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/api

paths:
  /buildings:
    get:
      tags: [ Buildings ]
      operationId: listBuildings
      summary: Получить список зданий
      description: >
        Возвращает справочник зданий, в которых располагаются организации.
      x-lg-middleware:
        - static.api.key
      responses:
        '200':
          description: OK — список зданий получен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingCollectionResponse'
        '401':
          description: Unauthorized — неверный или отсутствует API-ключ.
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - staticApiKey: [ ]

components:
  securitySchemes:
    staticApiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: >
        Статический API-ключ, передаваемый в заголовке `X-API-Key`.
  schemas:
    OrganizationActivity:
      type: object
      required: [ id, name ]
      properties:
        id:
          type: integer
        name:
          type: string
        parent_id:
          type: integer
          nullable: true
        depth:
          type: integer
          minimum: 1
          maximum: 3
          description: Уровень вложенности (1..3)
    ActivityTreeNode:
      type: object
      required: [ id, name, depth, children ]
      properties:
        id:
          type: integer
        name:
          type: string
        depth:
          type: integer
          minimum: 1
          maximum: 3
        children:
          type: array
          items:
            $ref: '#/components/schemas/ActivityTreeNode'

    OrganizationBuilding:
      type: object
      description: Здание, в котором располагается организация.
      required: [ id, name, latitude, longitude ]
      properties:
        id:
          type: integer
          description: Идентификатор здания.
        name:
          type: string
          description: Название здания.
        address:
          type: string
          nullable: true
          description: Адрес здания.
        latitude:
          type: number
          format: double
          description: Широта.
        longitude:
          type: number
          format: double
          description: Долгота.

    Organization:
      type: object
      description: Организация с информацией о расположении и видах деятельности.
      required: [ id, name, building, activities, phone_numbers ]
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true
        phone_numbers:
          type: array
          items:
            type: string
            description: Телефон в формате E.164 или локальном формате
          minItems: 1
        distance_meters:
          type: number
          format: double
          nullable: true
        building:
          $ref: '#/components/schemas/OrganizationBuilding'
        activities:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationActivity'
          minItems: 1

    OrganizationCollectionResponse:
      type: object
      description: Ответ со списком организаций.
      required: [ organizations ]
      properties:
        organizations:
          type: array
          items:
            $ref: '#/components/schemas/Organization'

    OrganizationResponse:
      type: object
      description: Ответ с одной организацией.
      required: [ organization ]
      properties:
        organization:
          $ref: '#/components/schemas/Organization'

    Building:
      type: object
      description: Здание из справочника.
      required: [ id, name, latitude, longitude ]
      properties:
        id:
          type: integer
          description: Идентификатор здания.
        name:
          type: string
          description: Название здания.
        address:
          type: string
          nullable: true
          description: Почтовый адрес здания.
        latitude:
          type: number
          format: double
          description: Географическая широта здания.
        longitude:
          type: number
          format: double
          description: Географическая долгота здания.

    BuildingCollectionResponse:
      type: object
      description: Ответ со списком зданий.
      required: [ buildings ]
      properties:
        buildings:
          type: array
          items:
            $ref: '#/components/schemas/Building'

    ValidationError:
      type: object
      description: Стандартизированный формат ошибки.
      properties:
        message:
          type: string
          nullable: true
          description: Общее сообщение об ошибке. Обычно приходит или оно или errors.
        errors:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ValidationErrorItem'
    ValidationErrorItem:
      type: object
      required: [ message ]
      properties:
        message:
          type: string
          description: Человеческое описание проблемы.
          example: "Имя должно быть не короче 6 символов."
        field:
          type: string
          description: Имя поля, к которому относится ошибка.
          example: name

    Error:
      type: object
      required: [ message ]
      properties:
        message:
          type: string
          description: Человеческое описание проблемы.
          example: "Что то пошло не так."
