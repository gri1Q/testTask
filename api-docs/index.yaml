openapi: 3.0.3
info:
  title: Example API
  version: 1.0.0
servers:
  - url: http://127.0.0.1:8000/api

paths:
  /buildings:
    get:
      tags: [ Buildings ]
      operationId: listBuildings
      summary: Получить список зданий
      description: Возвращает список доступных зданий с координатами.
      responses:
        '200':
          description: OK — список зданий получен.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBuildingsResponse'
        '400':
          description: Validation Error — входные данные не прошли валидацию.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /buildings/{id}:
    get:
      tags: [ Buildings ]
      operationId: getBuilding
      summary: Получить информацию о здании
      description: Возвращает данные здания по идентификатору.
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор здания.
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: OK — здание найдено.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBuildingResponse'
        '404':
          description: Not Found — здание не найдено.
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /buildings/search/circle:
    get:
      tags: [ Buildings ]
      operationId: searchBuildingsInRadius
      summary: Геопоиск зданий по радиусу
      description: Находит здания в пределах заданного радиуса от точки.
      parameters:
        - name: latitude
          in: query
          required: true
          description: Центральная широта.
          schema:
            type: number
            format: double
            minimum: -90
            maximum: 90
        - name: longitude
          in: query
          required: true
          description: Центральная долгота.
          schema:
            type: number
            format: double
            minimum: -180
            maximum: 180
        - name: radius
          in: query
          required: true
          description: Радиус поиска в метрах.
          schema:
            type: number
            format: double
            minimum: 1
          example: 500
      responses:
        '200':
          description: OK — найдены здания в радиусе.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBuildingsResponse'
        '400':
          description: Validation Error — входные данные не прошли валидацию.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /buildings/{buildingID}/organizations:
    get:
      tags: [ Organizations ]
      operationId: listOrganizationsByBuilding
      summary: Список организаций в здании
      description: >-
        Возвращает все организации, которые располагаются в указанном здании.
      parameters:
        - name: buildingID
          in: path
          required: true
          description: Идентификатор здания
          schema:
            type: integer
      responses:
        '200':
          description: OK — список сформирован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationListResponse'
        '404':
          description: Not Found — здание не найдено.
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /organizations/{id}:
    get:
      tags: [ Organizations ]
      operationId: getOrganization
      summary: Получить организацию по ID
      description: >-
        Возвращает карточку организации с адресом, телефонами и видами деятельности.
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор организации
          schema:
            type: integer
      responses:
        '200':
          description: OK — организация найдена.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationResponse'
        '404':
          description: Not Found — организация не найдена.
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /organizations/search:
    get:
      tags: [ Organizations ]
      operationId: searchOrganizationsByName
      summary: Поиск организаций по названию
      description: >-
        Выполняет полнотекстовый поиск по названию организации без учёта регистра.
      parameters:
        - name: name
          in: query
          required: true
          description: Часть названия организации
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: OK — список сформирован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationListResponse'
        '400':
          description: Validation Error — входные данные не прошли валидацию.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /organizations/nearby:
    get:
      tags: [ Organizations ]
      operationId: listOrganizationsNearby
      summary: Список организаций в радиусе от точки
      description: >-
        Возвращает организации, расположенные в указанном радиусе от заданной точки на карте.
      parameters:
        - name: latitude
          in: query
          required: true
          description: Широта центра поиска
          schema:
            type: number
            format: float
            minimum: -90
            maximum: 90
        - name: longitude
          in: query
          required: true
          description: Долгота центра поиска
          schema:
            type: number
            format: float
            minimum: -180
            maximum: 180
        - name: radius
          in: query
          required: true
          description: Радиус поиска в метрах
          schema:
            type: number
            format: float
            minimum: 1
      responses:
        '200':
          description: OK — список сформирован.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationListResponse'
        '400':
          description: Validation Error — входные данные не прошли валидацию.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationError'
        '500':
          description: Internal Server Error — непредвиденная ошибка на сервере.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  securitySchemes:
    staticApiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: >
        Статический API-ключ, передаваемый в заголовке `X-API-Key`.
  schemas:
    ValidationError:
      type: object
      description: Стандартизированный формат ошибки.
      properties:
        message:
          type: string
          nullable: true
          description: Общее сообщение об ошибке. Обычно приходит или оно или errors.
        errors:
          type: array
          nullable: true
          items:
            $ref: '#/components/schemas/ValidationErrorItem'

    ValidationErrorItem:
      type: object
      required: [ message ]
      properties:
        message:
          type: string
          description: Человеческое описание проблемы.
          example: "Имя должно быть не короче 6 символов."
        field:
          type: string
          description: Имя поля, к которому относится ошибка.
          example: name

    Error:
      type: object
      required: [ message ]
      properties:
        message:
          type: string
          description: Человеческое описание проблемы.
          example: "Что то пошло не так."

    Building:
      type: object
      description: Информация о здании с координатами.
      required: [ id, address, latitude, longitude, created_at, updated_at ]
      properties:
        id:
          type: integer
          format: int64
          description: Уникальный идентификатор здания.
          example: 42
        address:
          type: string
          description: Почтовый адрес здания.
          example: "Москва, ул. Льва Толстого, 16"
        latitude:
          type: number
          format: double
          description: Географическая широта.
          example: 55.733969
        longitude:
          type: number
          format: double
          description: Географическая долгота.
          example: 37.588144
        created_at:
          type: string
          format: date-time
          description: Дата создания записи.
        updated_at:
          type: string
          format: date-time
          description: Дата обновления записи.

    GetBuildingResponse:
      type: object
      description: Ответ с данными одного здания.
      required: [ building ]
      properties:
        building:
          $ref: '#/components/schemas/Building'

    ListBuildingsResponse:
      type: object
      description: Ответ со списком зданий.
      required: [ buildings ]
      properties:
        buildings:
          type: array
          items:
            $ref: '#/components/schemas/Building'


    OrganizationResponse:
      type: object
      description: Ответ с карточкой организации.
      required: [ organization ]
      properties:
        organization:
          $ref: '#/components/schemas/Organization'

    OrganizationListResponse:
      type: object
      description: Ответ со списком организаций.
      required: [ organizations ]
      properties:
        organizations:
          type: array
          description: Коллекция организаций.
          items:
            $ref: '#/components/schemas/Organization'

    Organization:
      type: object
      description: Карточка организации со всеми связанными данными.
      required: [ id, name, building, phones, activities ]
      properties:
        id:
          type: integer
          description: Идентификатор организации.
          example: 1
        name:
          type: string
          description: Название организации.
          example: "ООО «Рога и Копыта»"
        building:
          $ref: '#/components/schemas/OrganizationBuilding'
        phones:
          type: array
          description: Список телефонных номеров организации.
          items:
            $ref: '#/components/schemas/OrganizationPhone'
        activities:
          type: array
          description: Виды деятельности организации.
          items:
            $ref: '#/components/schemas/OrganizationActivity'

    OrganizationBuilding:
      type: object
      description: Информация о здании, в котором располагается организация.
      required: [ id, address, latitude, longitude ]
      properties:
        id:
          type: integer
          description: Идентификатор здания.
          example: 5
        address:
          type: string
          description: Полный адрес здания.
          example: "г. Москва, ул. Тверская, 1"
        latitude:
          type: number
          format: float
          description: Географическая широта здания.
          example: 55.75222
        longitude:
          type: number
          format: float
          description: Географическая долгота здания.
          example: 37.61556

    OrganizationPhone:
      type: object
      description: Телефонный номер организации.
      required: [ phone ]
      properties:
        phone:
          type: string
          description: Номер телефона в произвольном формате.
          example: "8-923-666-13-13"

    OrganizationActivity:
      type: object
      description: Вид деятельности, к которому относится организация.
      required: [ id, name, level ]
      properties:
        id:
          type: integer
          description: Идентификатор вида деятельности.
          example: 10
        name:
          type: string
          description: Название вида деятельности.
          example: "Молочная продукция"
        parentId:
          type: integer
          nullable: true
          description: Идентификатор родительского вида деятельности.
          example: 3
        level:
          type: integer
          minimum: 1
          maximum: 3
          description: Уровень вложенности в дереве (1 — корень, 3 — максимальный уровень).
